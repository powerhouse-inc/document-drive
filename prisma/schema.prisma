// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model Document {
  id                  String
  driveId             String
  created             DateTime             @default(now())
  lastModified        DateTime             @default(now())
  revision            Json
  name                String?
  operations          Operation[]
  initialState        Json // json object with the scope as keys of the root object
  documentType        String
  syncronizationUnits SyncronizationUnit[]

  @@id([id, driveId])
}

model Operation {
  driveId     String
  Document    Document?    @relation(fields: [driveId, documentId], references: [driveId, id])
  documentId  String
  scope       String
  branch      String
  index       Int
  skip        Int
  hash        String
  timestamp   DateTime
  input       Json
  type        String
  attachments Attachment[]
  syncId      String?
  clipboard   Boolean?     @default(false)

  SyncronizationUnit SyncronizationUnit? @relation(fields: [syncId, driveId], references: [id, driveId])

  @@id([driveId, documentId, scope, branch, index])
}

model SyncronizationUnit {
  id         String
  driveId    String
  documentId String

  Document   Document    @relation(fields: [documentId, driveId], references: [id, driveId])
  scope      String
  branch     String
  operations Operation[]

  @@id([id, driveId])
}

model Attachment {
  id         String    @id @default(uuid())
  driveId    String
  documentId String
  scope      String
  branch     String
  index      Int
  Operation  Operation @relation(fields: [driveId, documentId, scope, branch, index], references: [driveId, documentId, scope, branch, index])

  mimeType  String
  data      String
  filename  String
  extension String
  hash      String
}

model Listener {
  listenerId String @id @default(uuid())
  driveId    String

  label  String?
  block  Boolean
  system Boolean

  filter   Json
  callInfo Json
}
