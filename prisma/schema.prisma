// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "sqlite"
  url      = env("DATABASE_URL")
}

model Document {
  id           String
  driveId      String
  created      DateTime    @default(now())
  lastModified DateTime    @default(now())
  revision     Int
  name         String
  operations   Operation[]
  initialState String
  state        String?

  attachements String

  documentType String

  Drive       Drive?
  Node        Node?   @relation(fields: [nodeDriveId, nodeId], references: [driveId, id])
  nodeDriveId String?
  nodeId      String?

  @@id([id, driveId])
}

model Operation {
  driveId      String?
  Document     Document? @relation(fields: [driveId, documentId], references: [driveId, id])
  documentId   String
  hash         String
  index        Int
  timestamp    DateTime
  input        String
  type         String
  scope        String?   @map("scope")
  attachements String?

  @@id([documentId, timestamp, hash])
}

model Drive {
  id        String   @id
  createdAt DateTime @default(now())

  driveDocumentId   String?
  driveMetaDocument Document? @relation(fields: [id, driveDocumentId], references: [driveId, id], onDelete: Cascade)

  nodes     Node[]
  icon      String?
  name      String?
  remoteUrl String?

  @@unique([id, driveDocumentId])
}

model Node {
  driveId String
  id      String

  Drive Drive? @relation(fields: [driveId], references: [id], onDelete: Cascade, onUpdate: Cascade)

  kind         String?
  name         String?
  parentFolder String?

  // parentNode Node?  @relation("ParentNode", fields: [driveId, parentFolder], references: [driveId, id], onDelete: Cascade, onUpdate: Cascade)
  // nodes      Node[] @relation("ParentNode")

  Document Document[]

  @@id([driveId, id])
}
